name: Deploy Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths-ignore:
      - 'k8s/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Setup preview environments branch
        run: |
          # Skapa eller checka ut preview-environments branch
          if git ls-remote --heads origin preview-environments | grep -q preview-environments; then
            git fetch origin preview-environments
            git checkout preview-environments
            git pull origin preview-environments
          else
            git checkout -b preview-environments
            git push -u origin preview-environments
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate preview slug
        id: slug
        uses: rlespinasse/slugify-value@v1.4.0
        with:
          key: SLUG
          value: ${{ github.head_ref }}
          slug-maxlength: 20

      - name: Set hostname
        id: hostname
        run: echo "hostname=${{ steps.slug.outputs.SLUG }}.stage.berget.ai" >> $GITHUB_OUTPUT

      - id: imagename
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}

      - name: Build and push preview image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.imagename.outputs.lowercase }}:pr-${{ github.event.number }}
            ${{ env.REGISTRY }}/${{ steps.imagename.outputs.lowercase }}:pr-${{ github.event.number }}-${{ steps.slug.outputs.SLUG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

      - name: Check if preview already exists
        id: check-preview
        run: |
          SLUG="${{ steps.slug.outputs.SLUG }}"
          if [ -d "k8s/overlays/preview-$SLUG" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create or update preview overlay
        run: |
          SLUG="${{ steps.slug.outputs.SLUG }}"
          HOSTNAME="${{ steps.hostname.outputs.hostname }}"
          PR_NUMBER="${{ github.event.number }}"
          
          # Validera att SLUG inte är tomt
          if [ -z "$SLUG" ]; then
            echo "Error: SLUG is empty"
            exit 1
          fi
          
          # Skapa preview overlay directory
          mkdir -p "k8s/overlays/preview-$SLUG"
          
          # Skapa eller uppdatera kustomization.yaml
          cat > "k8s/overlays/preview-$SLUG/kustomization.yaml" << EOF
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: preview-$SLUG

resources:
  - ../../base
  - namespace.yaml

patchesStrategicMerge:
  - ingress-patch.yaml
  - deployment-patch.yaml

images:
  - name: ghcr.io/berget-ai/landing-page
    newTag: 'pr-$PR_NUMBER-$SLUG'

commonLabels:
  preview-created: "$(date -u +%Y%m%d)"

labels:
  - pairs:
      environment: preview
      pr-number: '$PR_NUMBER'
EOF
          
          # Skapa eller uppdatera namespace.yaml (endast om den inte finns)
          if [ ! -f "k8s/overlays/preview-$SLUG/namespace.yaml" ]; then
            cat > "k8s/overlays/preview-$SLUG/namespace.yaml" << EOF
apiVersion: v1
kind: Namespace
metadata:
  name: preview-$SLUG
  labels:
    environment: preview
    pr-number: '$PR_NUMBER'
    preview-slug: '$SLUG'
    created-at: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: preview-quota
  namespace: preview-$SLUG
spec:
  hard:
    requests.cpu: "200m"
    requests.memory: "256Mi"
    limits.cpu: "500m"
    limits.memory: "512Mi"
    pods: "5"
    services: "2"
    persistentvolumeclaims: "0"
EOF
          fi

          # Skapa eller uppdatera ingress-patch.yaml (endast om den inte finns)
          if [ ! -f "k8s/overlays/preview-$SLUG/ingress-patch.yaml" ]; then
            cat > "k8s/overlays/preview-$SLUG/ingress-patch.yaml" << EOF
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: berget-website
  namespace: preview-$SLUG
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    external-dns.alpha.kubernetes.io/hostname: $HOSTNAME
    nginx.ingress.kubernetes.io/custom-headers: preview-$SLUG/berget-custom-headers-configmap
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-status-code: "429"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Preview-Environment "PR-$PR_NUMBER" always;
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - $HOSTNAME
      secretName: berget-preview-$SLUG-tls
  rules:
    - host: $HOSTNAME
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: berget-website
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: berget-custom-headers-configmap
  namespace: preview-$SLUG
data:
  Content-Security-Policy: "default-src 'self'; script-src 'self'; style-src 'self'; font-src 'self'; img-src 'self' data:; connect-src 'self' https://api.stage.berget.ai; base-uri 'self'; form-action 'self'; frame-src 'none'; frame-ancestors 'none'; object-src 'none'; worker-src 'self'; manifest-src 'self'; upgrade-insecure-requests;"
  X-Content-Type-Options: nosniff
  X-Frame-Options: DENY
  X-Xss-Protection: '0'
  Strict-Transport-Security: 'max-age=31536000; includeSubDomains; preload'
  Cross-Origin-Resource-Policy: same-site
  Referrer-Policy: strict-origin
EOF
          fi
          
          # Skapa eller uppdatera deployment-patch.yaml (denna uppdateras alltid för ny image)
          cat > "k8s/overlays/preview-$SLUG/deployment-patch.yaml" << EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: berget-website
  namespace: preview-$SLUG
spec:
  replicas: 1
  selector:
    matchLabels:
      app: berget-website
      preview: $SLUG
  template:
    metadata:
      labels:
        app: berget-website
        preview: $SLUG
    spec:
      containers:
        - name: berget-website
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
EOF

      - name: Commit preview overlay
        run: |
          SLUG="${{ steps.slug.outputs.SLUG }}"
          
          git add "k8s/overlays/preview-$SLUG/" || true
          
          # Kontrollera att det finns ändringar att committa
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            if [ "${{ steps.check-preview.outputs.exists }}" == "false" ]; then
              git commit -m "feat: add preview overlay for PR #${{ github.event.number }} ($SLUG)"
            else
              git commit -m "feat: update preview overlay for PR #${{ github.event.number }} ($SLUG)"
            fi
            
            # Retry push med exponential backoff
            for i in {1..3}; do
              if git push origin preview-environments; then
                break
              else
                echo "Push failed, retrying in $((2**i)) seconds..."
                sleep $((2**i))
                git pull --rebase origin preview-environments
              fi
            done
          fi

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const hostname = '${{ steps.hostname.outputs.hostname }}';
            const slug = '${{ steps.slug.outputs.SLUG }}';
            const exists = '${{ steps.check-preview.outputs.exists }}' === 'true';
            
            const comment = exists 
              ? `## 🔄 Preview Environment Updated!
            
            Preview-miljön har uppdaterats med dina senaste ändringar:
            
            **🌐 Preview URL:** https://${hostname}
            
            ---
            
            <details>
            <summary>📋 Preview Details</summary>
            
            - **Environment:** \`preview-${slug}\`
            - **Image:** \`ghcr.io/berget-ai/landing-page:pr-${{ github.event.number }}-${{ steps.slug.outputs.SLUG }}\`
            - **Hostname:** \`${hostname}\`
            - **Status:** Updated
            
            </details>`
              : `## 🚀 Preview Environment Deployed!
            
            Din PR har fått en egen preview-miljö:
            
            **🌐 Preview URL:** https://${hostname}
            
            Preview-miljön uppdateras automatiskt när du pushar nya commits till denna PR.
            
            ---
            
            <details>
            <summary>📋 Preview Details</summary>
            
            - **Environment:** \`preview-${slug}\`
            - **Image:** \`ghcr.io/berget-ai/landing-page:pr-${{ github.event.number }}-${{ steps.slug.outputs.SLUG }}\`
            - **Hostname:** \`${hostname}\`
            - **Overlay:** \`k8s/overlays/preview-${slug}/\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
