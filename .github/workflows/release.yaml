name: Release to Production

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Bump version and create tag
        id: version
        run: |
          if [ -n "${{ github.event.inputs.custom_version }}" ]; then
            new_version="${{ github.event.inputs.custom_version }}"
            npm version $new_version --no-git-tag-version --allow-same-version
          else
            npm version ${{ github.event.inputs.version_type }} --no-git-tag-version --allow-same-version
            new_version=$(node -p "require('./package.json').version")
          fi

          git add package.json package-lock.json
          git commit -m "chore: bump version to $new_version"
          git tag "v$new_version"
          git push origin main
          git push origin "v$new_version"

          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "Released version: $new_version"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.version.outputs.new_version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release ${{ steps.version.outputs.new_version }}
          generate_release_notes: true
